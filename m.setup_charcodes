#!/bin/bash

declare -A charcodea chardesc charcodec

charset=
description=

function rb.setup_charcodes {
         charcodea[ascii]=ascii	; chardesc[ascii]="ASCII"	;
       charcodea[usascii]=ascii
charcodea[printableascii]=ascii	;
          charcodea[utf7]=utf7	; chardesc[utf7]="Unicode"	;
          charcodea[utf8]=utf8	; chardesc[utf8]="Unicode"	;
         charcodea[utf16]=utf16	; chardesc[utf16]="Unicode"	;
       charcodea[utf16be]=utf16be; chardesc[utf16be]="Unicode"	;
       charcodea[utf16le]=utf16le; chardesc[utf16le]="Unicode"	;
       charcodea[unicode]=unicode; chardesc[unicode]="Unicode"	;
       charcodea[so88591]=88591	; chardesc[88591]="Western"	;	# this one is to catch an anomaly seen in the input
      charcodea[iso88591]=88591	; chardesc[88591]="Western"	;
      charcodea[iso88592]=88592	; chardesc[88592]="Central"	;
      charcodea[iso88593]=88593	; chardesc[88593]="Turkish"	;
      charcodea[iso88594]=88594	; chardesc[88594]="Baltic"	;
      charcodea[iso88595]=88595	; chardesc[88595]="Cryllic"	;
      charcodea[iso88596]=88596	; chardesc[88596]="Arabic"	;
      charcodea[iso88597]=88597	; chardesc[88597]="Greek"	;
      charcodea[iso88598]=88598	; chardesc[88598]="Hebrew"	;
      charcodea[iso88599]=88599	; chardesc[88599]="Turkish"	;
     charcodea[iso885910]=885910; chardesc[885910]="Nordic"	;
     charcodea[iso885911]=885911; chardesc[885911]="Thai"	;
     charcodea[iso885912]=885912; chardesc[885912]="Devengari"	;
     charcodea[iso885913]=885913; chardesc[885913]="Baltic"	;
     charcodea[iso885914]=885914; chardesc[885914]="Celtic"	;
     charcodea[iso885915]=885915; chardesc[885915]="Western"	;
     charcodea[iso885916]=885916; chardesc[885916]="Southern"	;
    charcodea[windows874]=874	; chardesc[874]="Thai"	;
   charcodea[windows1200]=1200
   charcodea[windows1250]=1250	; chardesc[1250]="European"	;
   charcodea[windows1251]=1251	; chardesc[1251]="Cryllic"	;
   charcodea[windows1252]=1252	; chardesc[1252]="Western"	;
   charcodea[windows1253]=1253	; chardesc[1253]="Greek"	;
   charcodea[windows1254]=1254	; chardesc[1254]="Turkish"	;
   charcodea[windows1255]=1255	; chardesc[1255]="Hebrew"	;
   charcodea[windows1256]=1256	; chardesc[1256]="Arabic"	;
   charcodea[windows1257]=1257	; chardesc[1257]="Baltic"	;
   charcodea[windows1258]=1258	; chardesc[1258]="Vietnam"	;
          charcodea[big5]=big5	; chardesc[big5]="Taiwan"	;
         charcodea[euckr]=euckr	; chardesc[eukcr]="Korean"	;
         charcodea[eucjp]=eucjp	; chardesc[eukjp]="Japanese"	;
        charcodea[gb2312]=2312	; chardesc[2312]="Chinese"	;
      charcodea[hzgb2312]=2312
      charcodea[iso2022cn]=2022cn ; chardesc[2022cn]="Chinese"	;
     charcodea[iso2022kr]=2022kr; chardesc[2022kr]="Korean"	;
     charcodea[iso2022jp]=2022jp; chardesc[2022jp]="Japanese"	;
         charcodea[koi8r]=koi8r	; chardesc[koi8r]="Cryllic"	;
         charcodea[koi8u]=koi8u	; chardesc[koi8u]="Ukrainian"	;
				  chardesc[unknown]='-'
#text/calendar; charset="utf-8"; name=
#text/calendar; method="REQUEST"; charset="utf-8"
#text/html; charset=""
#text/html; charset="big5"
#text/html; charset="euc-kr"
#text/html; charset="gb2312"
#text/html; charset="ISO-8859-1"
#text/html; charset=ISO-8859-1
#text/html; charset="iso-8859-1"
#text/html; charset="iso-8859-15"
#text/html; charset="iso-8859-2"
#text/html; charset="iso-88592"
#text/html; charset="iso-8859-3"
#text/html; charset="iso-8859-4"
#text/html; charset="iso-8859-5"
#text/html; charset="koi8-r"
#text/html; charset="ks_c_5601-1987"
#text/html; charset="printable-ascii"
#text/html; charset="unicode"
#text/html; charset="US-ASCII"
#text/html; charset="us-ascii"
#text/html; charset="UTF-16"
#text/html; charset="utf-16"
#text/html; charset="UTF-8"
#text/html; charset="utf-8"
#text/html; charset="windows-1250"
#text/html; charset="windows-1251"
#text/html; charset="Windows-1252"
#text/html; charset="windows-1252"
#text/html; charset="windows-1253"
#text/html; charset="windows-1254"
#text/html; charset="windows-1255"
#text/html; charset="windows-1256"
#text/html; charset="windows-1257"
#text/html; charset="windows-1258"
#text/html; charset="x-user-defined"
#text/plain
#text/plain; charset="ASCII"
#text/plain; charset="ascii"
#text/plain; charset="big5"
#text/plain; charset="euc-kr"
#text/plain; charset="gb2313"
#text/plain; charset="iso-2022-jp"
#text/plain; charset="ISO-8859-1"
#text/plain; charset="iso-8859-1 "
#text/plain; charset="iso-8859-1"
#text/plain; charset="ISO-8859-15"
#text/plain; charset="iso-8859-15"
#text/plain; charset=ISO-8859-1;format=flowed
#text/plain; charset="iso-8859-2"
#text/plain; charset="iso-8859-5"
#text/plain; charset="koi8-r"
#text/plain; charset="US-ASCII"
#text/plain; charset="us-ascii"
#text/plain; charset="utf-7"
#text/plain; charset="UTF-8"
#text/plain; charset="utf-8"
#text/plain; charset="windows-1200"
#text/plain; charset="windows-1250"
#text/plain; charset="windows-1251"
#text/plain; charset="Windows-1252"
#text/plain; charset="windows-1252"
#text/plain; charset="windows-1253"
#text/plain; charset="windows-1254"
#text/plain; charset="windows-1255"
#text/plain; charset="windows-1256"
#text/plain; charset="windows-1257"
#text/plain; charset="windows-1258"
#text/plain; charset="windows-874"
}

function rb.get_charset {
	charset=$(echo "$value" | sed 's/^.*charset='\"'\([^'\"']*\)'\"'.*$/\1/ ; s/[;\/'\"\'']//g')
}

function rb.get_charcode {
	(( charcodec["${charset,,*}"]++ ))
	charcode="${charcodea[$(echo "${charset,,*}" | sed 's/[^[:alnum:]]//g')]}"
	[[ $charcode ]] || charcode='unknown'
	description="${chardesc[$charcode]}"
	if [ $? != 0 ] ; then
		alert error "Description for $charset ($charcode) not found."
		description=unknown
	fi
}
