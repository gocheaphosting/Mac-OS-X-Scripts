#!/bin/bash

. '/home/jim/bin/_pic_analysis_header'

#############################################################################
# main
#############################################################################

count=0

if [ "x$reset" != "xyes" ] ; then

while read file ; do

#	message "Using $input"

#	message "Reading $file"

	exec 8<"$file"

	setfile=$(echo "$file" | sed 's/\(.*\)\.result/\1/')

	exec 5<"$setfile"

	while read pline ; do

		picture=$(echo "$pline" | sed 's/[^ ]* *\(.*\)/\1/')
#		echo "$picture" >&2
		feh "$picture" &
#		exit

	done <&5

	exec 5<&-

	filecount=0

	while read line ; do

		a=($line)

#		message "a0=${a[0]}"
#		message "a1=${a[1]}"
#		message "a2=${a[2]}"

		case "${a[0]}" in

			'SUMMARY')

				filecount="${a[1]}"

#				message "filecount=$filecount"

				echo "$line" | grep -E "($filecount)|(^)" --color=auto

				;;

			'<')

#				message "yank"

				echo "$line" | grep -E "(^<)|(\[)|(\])|( [-:])|( 0x)" --color=auto

				;;

			'>')

#				message "put"

				echo "$line"

				;;

			"$filecount")

#				message "yankfile"

				echo "$line" | grep -E "(^$filecount)" --color=auto

				;;

			"TABLE")

#				message "TABLE"

				filecount=0

				echo "$line"

				;;

			*)

				echo "$line"

				;;

		esac

#	echo 'Press <enter> to continue.'

#	<&1 read dummy_tmp

	done <&8

	exec 8<&-

	. "${bin}/show-progress"

	echo

	<&1 ask-continue

done <&6

fi

. "${bin}/_pic_analysis_footer"
