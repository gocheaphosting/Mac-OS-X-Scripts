#!/bin/bash

. "${HOME}/bin/general_header"
. "${bin}/m._process_headers"

# I/O

input="$1" #mailheaders.safe generated by m.readheaders (a file of just headers)
[[ $input ]] || input=mailheaders.safe
output="splitmail"
log="splitheaders.log"

# Globals

linein=
thismsg=
name=
value=
from=
org=
loc=
date=
declare -a to
subject=

# Init

searching=yes

# Constants

nto=10
wname=14								# width of name column in mail output file.
wsubjectd=50
quot=\"

function reset {
	mf.reset
	searching=yes
	thismsg="$name"
	from=
	date=
	unset to
	declare -a to
	into=
	subject=
	fromfound=no
	datefound=no
	tofound=no
	subjectfound=no
}

function m.split.dumpline {
	echo -e "$ColourOn${BrightBlack}m$linein$ColourOff" >&2
}

function m.dumpvars1 {
	printval "Input:" "$input"
	printval "Output:" "$output"
	printval "Log:" "$log"
	printval "File:" "$thismsg"
	printval "Line:" "$linein"
	printval "----------" "----------"
	printval "Name:" "$name"
	printval "Value:" "$value"
}

function m.dumpvars2 {
	printval "Name:" "$name"
	printval "Value:" "$value"
	printval "----------" "----------"
	printval "From:" "$from"
	printval "Date:" "$date"
	printval "To:" "${to[*]}"
	printval "Subject:" "$subject"
	printval "Headers:" "$hc"
}

function parse {
	pchr="$1"
	line="_$value"
	name=$(echo "${line:1}$pchr" | sed 's/^[[:space:]]*'"$pchr"'*["$quot"]'"$pchr"'*// ; s/'"$pchr"'*/\x01/ ; s/\x01.*// ; ')
	value=$(echo "${line:1}$pchr" | sed 's/'"$pchr"'*/\x01/ ; s/.*\x01[[:space:]]*//')
}

function parseto {
		to[${#to[*]}]="$name"
		parse "$1"
}

function searchto {
	line="_$value"
	qt=$(echo "${line:1}" | sed 's/^[[:space:]]*'"$quot"'.*//')
	if ! [[ "$qt" ]] ; then
		into=
		tofound=
	else
		parseto "$quot"
		echo -e "${cfile}To= ${cto}$name"
	fi
}

function process_line {
	parse ':'
	case "${name,,*}" in
	"from:")
		parse '@'
		from="$name"
		echo -e "${cfile}From: ${cfrom}$from${c0}"
		fromfound=
	;;
	"to:")
		parseto ';'
		while [[ $value ]] ; do
			parseto ';'
		done
		echo -e "${cto}${to[*]}${c0}"
		into=yes
	;;
	"subject:")
		subject="$value"
		echo -e "${cfile}Subject: ${csub}$subject${c0}"
		subjectfound=
	;;
	"date:"|"sent:")
		mf.get_date
		date="$date"
		echo -e "${cfile}Date: ${cdate}$date${c0}"
		datefound=
	;;
	*)
		if [[ $into ]] ; then
			searchto
		else
			:
		fi
	;;
	esac
	[[ $fromfound$datefound$tofound$subjectfound ]] || searching=
}

function output {
		n=${#to[*]}
		if [ $n -gt $nto ] ; then
			tos="To: $n"
		else
			tos="${to[*]}"
		fi
		msg2="${cdate}$date ${cfrom}$from ${csub}$subject ${cto}$tos ${cfile}$thismsg"
		echo "$msg2" >&7
		echo "$date $from $subject" >&8
}

function state_machine {

	parse ':'
	file="$name"

	if [[ "x$file" = "x$thismsg" ]] ; then

		if [[ $searching ]] ; then

			progress
			echo
			dumpline

			process_line

		else
			progress
			echo
			dumpline

			echo "Ignoring..."
		fi
	else
		output

		progress
		echo
		dumpline

		echo "File: $file (prev: $thismsg)"
		reset

		process_line
	fi
}

function readlines {
	reset
	while read linein ; do
		value="$linein"
		state_machine
	done
}

function main {
	start 					# sets up exec 6<"$input" and progress meter
	readlines <&6
}

main

footer
