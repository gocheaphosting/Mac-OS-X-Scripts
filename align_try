#!/bin/bash

# align 1.3.0.1 2011-05-18 Jim Oliver

tempdir=~/tmp
rm -f /tmp/align_me
rm -f /tmp/aligned
exec 6>/tmp/align_me
exec 7</tmp/align_me
exec 9>/tmp/aligned
NUM_COLUMNS_MIN=2 # Do not change any lines with only two words or less.
NUM_COLUMNS=0
NUM_COLUMNS_MAX=0
test_int=s/\^\\\([-+]?[0-9]+\\\).*$/\\\1/ # Only align integers to the right.
echo $test_int
column_separator_default='|'
pad_default=' '
function waitforenter
{
	echo Press ENTER to continue...
	read
}

function makepad
{
	(( PADDING = $1 - $2 ))
	case "$PADDING" in
	0)	PAD=" " ;;
	1)	PAD="  " ;;
	2)	PAD="   " ;;
	3)	PAD="    " ;;
	4)	PAD="     " ;;
	5)	PAD="      " ;;
	6)	PAD="       " ;;
	7)	PAD="        " ;;
	8)	PAD="         " ;;
	9)	PAD="          " ;;
	10)	PAD="           " ;;
	11)	PAD="            " ;;
	12)	PAD="             " ;;
	13)	PAD="              " ;;
	14)	PAD="               " ;;
	15)	PAD="                " ;;
	16)	PAD="                 " ;;
	17)	PAD="                  " ;;
	18)	PAD="                   " ;;
	19)	PAD="                    " ;;
	20)	PAD="                     " ;;
	21)	PAD="                      " ;;
	22)	PAD="                       " ;;
	23)	PAD="                        " ;;
	24)	PAD="                         " ;;
	25)	PAD="                          " ;;
	26)	PAD="                           " ;;
	27)	PAD="                            " ;;
	28)	PAD="                             " ;;
	29)	PAD="                              " ;;
	30)	PAD="                               " ;;
	*)	PAD="                               " ;;
	esac
	echo -n "$PAD"
}

function check {

	if [ "x$2" = "x" ] ; then
		default=' '
	else
		default="$2"
	fi

	if [ "x$1" = "x" ] ; then
		echo "$default"
	else
		echo "$1"
	fi
}

echo 'check: '\$1=\>$1\<
echo 'check: '\$2=\>$2\<
cs=$(check "$1" "$column_separator_default")
pd=$(check "$2" "$pad_default")
cs=' '
pd=' '
echo 'check: cs='\>$cs\<
echo 'check: pd='\>$pd\<
echo 'check: PAD='\>$PAD\<

exec 6>/tmp/align_me
while read input_line ; do
	echo $input_line >&6
done
exec 6>&-

exec 7</tmp/align_me
while read -a WORDS ; do
	NUM_COLUMNS=${#WORDS[*]}
	if [ $NUM_COLUMNS -gt $NUM_COLUMNS_MAX ] ; then
		NUM_COLUMNS_MAX=$NUM_COLUMNS
	fi
	if [ $NUM_COLUMNS -gt $NUM_COLUMNS_MIN ] ; then
		for (( i = 0 ; i <= $NUM_COLUMNS - 1 ; i++ )) ; do
			WORDLEN=${#WORDS[$i]}
			COLUMN_WIDTH_MAX[$i]=0
			if [ $WORDLEN -gt ${COLUMN_WIDTH_MAX[$i]} ] ; then
				COLUMN_WIDTH_MAX[$i]=$WORDLEN
			fi
		done
	fi
done <&7
exec 7<&-

PAD="$pd"
lines=0
exec 8</tmp/align_me
exec 9>/tmp/aligned
while read -a WORDS ; do
	(( lines++ ))
	echo -n $lines' : '
	NUM_COLUMNS=${#WORDS[*]}
	echo -n $NUM_COLUMNS' :'
	for (( i = 0 ; i <= $NUM_COLUMNS - 1 ; i++ )) ; do
		WORD=${WORDS[$i]}
			echo -n '>'$WORD'('${#WORD}'/'${COLUMN_WIDTH_MAX[$i]}') '
		echo PAD="$(makepad ${COLUMN_WIDTH_MAX[$1]} ${#WORD})"
		is_int=$(echo $WORD | sed $test_int)
			echo -n 'int:'"$is_int"'<'
		if [ -z "$is_int" ] ; then
			echo -n "$WORD$PAD" >&9
		else
			echo -n "$PAD$WORD" >&9
		fi
		echo -n $PAD'< '
	done
	echo >&9
	echo
done <&8
exec 8<&-
exec 9>&-
echo
echo ================================================================================
cat /tmp/align_me
echo ================================================================================
cat /tmp/aligned
echo ================================================================================

#!/bin/bash
# align-me 1.3 2011-05-07 Jim Oliver
# Copyright (c) Jim Oliver. All Rights Reserved.
NUM_COLUMNS=0
NUM_COLUMNS_MAX=0
NUM_COLUMNS_MIN=2
NUM_RECORDS=0
COLUMN_WIDTH=0
COLUMN_PAD=" "
COLUMN_SEPARATOR=" "
regexp='^[0-9]*$'
rm /tmp/aligned &>/dev/null
cat $1 > /tmp/align_me
exec 6</tmp/align_me
	while read -a WORDS -u 6 ; do
		(( NUM_RECORDS++ ))
		NUM_COLUMNS=${#WORDS[*]}
		if [ $NUM_COLUMNS -gt $NUM_COLUMNS_MAX ] ; then
			NUM_COLUMNS_MAX=$NUM_COLUMNS ; fi

		if [ $NUM_COLUMNS -gt $NUM_COLUMNS_MIN ] ; then
			for (( i = 0 ; i <= $NUM_COLUMNS - 1 ; i++ )) ; do
				COLUMN_WIDTH=${#WORDS[$i]}
				if [ $COLUMN_WIDTH -gt "0${COLUMN_WIDTH_MAX[$i]}" ] ; then
					COLUMN_WIDTH_MAX[$i]=$COLUMN_WIDTH ; fi
			done
		fi
	done
exec 6<&-
exec 6</tmp/align_me
exec 7>/tmp/aligned
	while read -a WORDS -u 6 ; do
		NUM_WORDS=${#WORDS[*]}
		for (( i = 0 ; i <= $NUM_WORDS - 1 ; i++ )) ; do
			WORD=${WORDS[$i]}
			WORDLEN=${#WORD}
			check_phrase=`echo $WORD | sed "s/\($regexp\)//"`
			if [ -z "${check_phrase}" ] ; then
				LENGTH=${COLUMN_WIDTH_MAX[$i]}
				(( PADDING = $LENGTH - $WORDLEN ))
				for (( p = 0 ; p < $PADDING ; p++ )) ; do
					echo -n ' ' >&7
				done
				echo -n $WORD >&7
			else
				echo -n ${WORDS[$i]} >&7
				LENGTH=${COLUMN_WIDTH_MAX[$i]}
				(( PADDING = $LENGTH - $WORDLEN ))
				for (( p = 0 ; p < $PADDING ; p++ )) ; do
					echo -n ' ' >&7
				done
			fi
			echo -n "$COLUMN_SEPARATOR" >&7
		done
		echo -e -n "\n" >&7
		echo -n "."
	done
exec 6<&-
echo
cat /tmp/aligned
