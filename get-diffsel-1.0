#!/bin/bash

. '/home/jim/bin/_pic_analysis_header'

#############################################################################
# remove-samevals
#############################################################################

function remove-samevals {

	local count line a key

	if [[ "${prev}.diff.bykey" -nt "${prev}.diff.diffvals" ]] ; then

		_init_file "${prev}.diff.diffvals"

		count=0
		unset fl

		valp=impossiblevaluetomatch

		while read line ; do

			(( count++ ))
			(( countp = "$count" - 1 ))

			val=$(echo "$line)" | sed 's/[<>] [^ ]* *[^ ]* *[^ ]* *: \?\(.*\)/\1/')

			if [ "x$val" = "x$valp" ] ; then
				fl["$countp"]='delete'
				fl["$count"]='delete'
			fi

			valp="$val"

		done < "${prev}.diff.bykey"

		count=0

		while read line ; do

			(( count++ ))

			if [ "x${fl[$count]}" = "x" ] ; then
				echo "$line" >> "${prev}.diff.diffvals"
			fi

		done < "${prev}.diff.bykey"

	fi
}

#############################################################################
# remove-samekeys
#############################################################################

function remove-samekeys {

	local count line a key

	if [[ "${prev}.diff.diffvals" -nt "${prev}.diff.diffkeys" ]] ; then

		_init_file "${prev}.diff.diffkeys"

		count=0
		unset fl
		keyp=impossiblevaluetomatch

		while read line ; do

			(( count++ ))
			(( countp = "$count" - 1 ))
			a=($line)

			key="${a[3]}"
			if [ "x$key" = "x$keyp" ] ; then

				fl["$count"]='delete'
				fl["$countp"]='delete'

			fi

			keyp="$key"

		done < "${prev}.diff.diffvals"

		count=0

		while read line ; do

			(( count++ ))

			if [ "x${fl[$count]}" = "x" ] ; then

				echo "$line" >> "${prev}.diff.diffkeys"

			fi

		done < "${prev}.diff.diffvals"

	fi
}

#############################################################################
# print-diff
#############################################################################

function print-diff {

#	rm "${prev}.diff."* >&/dev/null

	if [[ "${prev}.diff" -nt "${prev}.diff.bykey" ]] ; then
		cat "${prev}.diff" | sort -k4,4 -k3,3 -k1,1 | grep -Ev "(^$)" > "${prev}.diff.bykey"
		cat "${prev}.diff.bykey" | uniq -f 5 --all-repeated=separate > "${prev}.diff.samevals"
		remove-samevals
		cat "${prev}.diff.diffvals" | uniq -f 3 -w 15 --all-repeated=separate > "${prev}.diff.samekeys"
		remove-samekeys
	fi

	echo
	echo '==============================================================================================='
	echo
	echo "SUMMARY $filecountp"
#	echo
#	cat "${prev}.diff.bykey"
#	echo
#	cat "${prev}.diff.samevals"
#	cat "${prev}.diff.samekeys"

	if [[ x$(wc -l "${prev}.diff.samevals") > "x1" ]] ; then
		echo
		echo '...............................................................................................'
		echo
		echo "MOVED"
		echo
		echo "$filecountp" | grep -E "(.)" --color=auto
		cat "${prev}.diff.samevals" | grep -E "(^<)" | grep -E "(<)|(\[)|(\])|( [-:])|( 0x)" --color=auto
		echo
		echo "$filecount"
		cat "${prev}.diff.samevals" | grep -E "(^>)"
	fi

	if [[ x$(wc -l "${prev}.diff.samekeys") > "x1" ]] ; then
		echo
		echo '...............................................................................................'
		echo
		echo "CHANGED"
		echo
		echo "$filecountp" | grep -E "(.)" --color=auto
		cat "${prev}.diff.samekeys" | grep -E "(^<)" | grep -E "(<)|(\[)|(\])|( [-:])|( 0x)" --color=auto
		echo
		echo "$filecount"
		cat "${prev}.diff.samekeys" | grep -E "(^>)"
	fi

	if [[ x$(wc -l "${prev}.diff.diffkeys") > "x1" ]] ; then
		echo
		echo '...............................................................................................'
		echo
		echo "DELETED"
		echo
		echo "$filecountp" | grep -E "(.)" --color=auto
		cat "${prev}.diff.diffkeys" | grep -E "(^<)" | grep -E "(<)|(\[)|(\])|( [-:])|( 0x)" --color=auto
		echo
		echo '...............................................................................................'
		echo
		echo "ADDED"
		echo
		echo "$filecount"
		cat "${prev}.diff.diffkeys" | grep -E "(^>)"
	fi

	echo
	echo '...............................................................................................'
	echo
	echo "BY TAG"
	echo
	cat "${prev}.diff.bykey" | grep -E "(^<)|(^)" --color=auto
	echo
	echo '...............................................................................................'
	echo
	echo "BY FILE"
	echo
	echo "$filecountp" | grep -E "(.)" --color=auto
	cat "${prev}.diff.bykey" | grep -E "(^<)" | grep -E "(<)|(\[)|(\])|( [-:])|( 0x)" --color=auto
	echo
	echo "$filecount"
	cat "${prev}.diff.bykey" | grep -E "(^>)"
	echo
	echo TABLE
	echo
	echo
	cat "chk.key"
	cat -n "$setfile" | grep -E '(^ *'"$filecountp"')|(^)' --color=auto

}

function _init_file {

	[[ -e "$1" ]] && rm "$1"
	touch "$1"

}

#############################################################################
# main
#############################################################################

if [ "x$reset" = "xyes" ] ; then

	find -iname "*.result" -delete

	message "Result files deleted."

	for i in keywords comments dates ; do

		find -iname "*.$i" -delete

		message "$i files deleted"

	done

else

exec 6<&-
cat "$input" | sort -r > /tmp/in6
exec 6</tmp/in6

count=0

while read line ; do

	a=($line)
	settotal="${a[0]}"
	setfile=$(echo "$line" | sed 's/^[0-9]* *\(.*\)$/\1/')
	if [ -f "$setfile" ] ; then
		exec 8<"$setfile"
		exec 9>"${setfile}.result"
	else
		echo "Can't find '${setfile}'"
		exit 1
	fi
	echo "${setfile}.result" >&7
	prev=
	filecount=

	for i in keywords comments dates ; do

		_init_file "${setfile}.$i"

	done

	while read line1 ; do

		file=$(echo "$line1" | sed 's/^[^ ]* *\(.*\)$/\1/')

		(( filecount++ ))
		(( filecountp = filecount - 1 ))

		[[ "$prev" ]] && print-diff "$1" "$2"

		_get_keywords

		echo "$filecount" "$keywords_str" >> "${setfile}.keywords"
		echo "$filecount" "$comments_str" >> "${setfile}.comments"
		echo "$filecount" "$original_dat    $modified_dat" >> "${setfile}.dates"

		prev="$file"

	done <&8 >&9

	for i in keywords comments dates ; do

		echo
		echo "$i"
		echo
		cat "${setfile}.$i"

	done >&9

	cat "$setfile" | sed 's/[^ ]* *\(.*\)/\1/' | list-photo-data >&9

	exec 8<&-
	exec 9>&-

	. "${bin}/show-progress"

done <&6

fi

echo

. "${bin}/_pic_analysis_footer"
