#!/bin/bash

# align 3.0
# Usage: align [<int>] [<char>]
# optional int in any position indicates a column number to left-align.
# optional char in any position indicates column delimiter to use in input file.

rm -f /tmp/align
rm -f /tmp/aligned
exec 7>/tmp/align
for i in $@ ; do
	is_int=$(echo "$i" | sed 's/^[0-9]*$//')
	case "$is_int" in
		'')	a[$i]='-' ;;
		*)	dm=$i ;;
	esac
done
if ! [ "x$dm" = "x" ] ; then
	command=s/\\$dm\\$dm/\\$dm'nil'\\$dm/g
	sed "$command" | tr ' ' '_' | tr "$dm" ' ' >&7
else
	while read i ; do
		echo "$i"
	done >&7
fi
exec 7>&-
exec 6</tmp/align
NX=0
while read -a W ; do
	N=${#W[*]}
	if [ $N -gt $NX ] ; then
		NX=$N
	fi
	if [ $N -gt 2 ] ; then
		for (( i = 0 ; i <= $N - 1 ; i++ )) ; do
			CW=${#W[$i]}
			if [ $CW -gt "0${CM[$i]}" ] ; then
				CM[$i]=$CW
			fi
		done
	fi
done <&6
for (( i = 0 ; i <= $NX - 1 ; i++ )) ; do
	case "${a[$i]}" in
		'-')	P="$P"'%'${CM[$i]}'s ' ;;
		*)	P="$P"'%-'${CM[$i]}'s ' ;;
	esac
done
P=$P'\n'
exec 6<&-
exec 6</tmp/align
exec 7>/tmp/aligned
while read i ; do
	printf "$P" $i
done <&6 >&7
cat /tmp/aligned
